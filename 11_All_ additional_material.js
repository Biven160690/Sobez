// Node ==================================================================


// Есть альтернатива Deno.js

// Node.js —  программная платформа, основанная на движке V8 (транслирующем JavaScript в машинный код), превращающая JavaScript из узкоспециализированного языка в язык общего назначения....

// В Node.js функции базовых модулей асинхронны. Это  означает,  что  функции  ноды  не  блокируют 
// поток, а исполняются в фоновом режиме.

// Одни и те же программисты могут работать над обеими сторонами приложения; 
//Общий язык общения между группами, работающими над клиентской и серверной частью.  

//========================  Модули Node.js  ==========================

// Модули  –  это  базовые  строительные  блоки  для  создания  приложений  на  платформе  Node.js.  Любой  JavaScript файл, используемый в Node является модулем. 

// EventEmitter – это основной класс, который реализует работу обработчиков событий и содержит методы для работы с событиями. Все  объекты,  которые  должны  генерировать  события  должны  являться  экземпляром  класса  EventEmitter. Когда  происходит  генерация  события,  все  функции-обработчики  прикрепленные  к  данному  событию  вызываются синхронно. 

//Чтобы установить обработчик на событие, необходимо использовать один из следующих методов: 
//   - on(‘имя_события’, функция-обработчик); 
//   - addListener(‘имя_события’, функция-обработчик); 
//   -  once(‘имя_события’,  функция-обработчик)  –  обработчик  сработает  только  один  раз,  и  будет  удален. 

// Для удаления обработчика события используется метод removeListener(‘имя_события‘, функция-обработчик)

// ======================= npm =============================

// npm (Node Package Manager) - это пакетный менеджер созданный для Node.js, который
// позволяет управлять модулями и зависимостями при создании приложений.

// ======================= Express =============================

// Express  -  это  минималистичный  и  гибкий  веб-фреймворк  для  приложений  Node.js,    построенный  на базе фреймворка connect.  
// Основное  предназначение  Express  -  маршрутизация  и  промежуточная  обработка  с  минимальной 
// собственной  функциональностью:  приложение  Express,  по  сути,  представляет  собой  серию  вызовов  функций промежуточной обработки (middleware). 
// Маршрутизация  определяет,  как  приложение  отвечает  на  клиентский  запрос  к  конкретному  адресу,  и определенному методу HTTP запроса.


//================================ Cookies ===========================

// Cookies  (англ.  печенье)  –  небольшая  порция  данных,  которые  отправлены  веб-
// сервером и хранимые на компьютер пользователя. 
 
// При каждом запросе к серверу, браузер добавляет  cookies в HTTP запрос.
// Обычно cookies используются для: 
//   1. аутентификации пользователя 
//   2. хранение персональных данных и настроек пользователя 
//   3. отслеживание состояния сеанса доступа пользователя 
//   4. ведение статистики о пользователях 

//================================== Restify =======================================

// Restify - это модуль, предназначенный для построения REST API приложений на Node.js.


// =================================== Socket.IO  ===================================

// Socket.IO  -  JavaScript  библиотека  для  веб-приложений  и  обмена 
// данными  в  реальном  времени  через  WebSockets.  Состоит  из  двух 
// частей:  клиентской,  которая  запускается  в  браузере  и  серверной  для 
// Node.js.

// Socket.IO подходит для: 

// • быстрого обмена данными для онлайн игр, чатов и пр.; 
// • веб-приложений с интенсивным обменом данными, требовательные 
// к скорости обмена и каналу; 
// • push уведомлений.



// Sass  и Less ====================================================================


//Расширение для CSS
//Не дублированности кода когда добавляем к родительскому классу(вложенность,) мы пишем в скобках новый класс или тег к которому будем обрщаться.
// Можно вводить переменную, потом эту пременную можно встравлять в наши свойтсва и им будуи передаваться то значение которое присвоено этой переменной.
//Создание шаблонов (этим шаблоном моэет пользоваться любой класс, мы можем его переимпользовать)
//Миксины аналог функции(возможность иметь переменные)
//Применение математичексих операторов (/; *; -) вычисление процентов в размерах
// Less использование @media при  измененеии разрешения экрана мв можем прописать свои данные (новый цвет или шрифт)

