//================================= Что такое DOM ===========================================

// Это интерфейс который рассматривает  html и  xml в виде дверовидной структуры, каждый узел которых являеться объектом документа. Он так же предоставляет методы для запроса, изменения структуры дерева документа.

// Теги в  html документе предстваляют узлы. Текст - это тоже узел....Узел <p> имеет потомка - текстовый узел

//  <html lang="en"> узел в дереве документа
//   <head> узел, родителем которго являеться  html
//     <meta charset="UTF-8" />
//     <meta http-equiv="X-UA-Compatible" content="IE=edge" />
//     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
//     <title>Document</title>
//   </head>
//   <body> - узел боди, у его родитель узел html; у боди три дочерних узла( коментарии, строка и заголовок)
//   <!-- -->
//   <p></p>
//   <h1></h1>
//   </body>
// </html>

//========================== Html ====================

// Html - это язык разметки для создания веб-страниц...  который состоит и элементов которые говорят браузеру как должны выглядеть!!!!!
// Тег - элемент языка разметки, обладающих определенным свойствам
// Антрибут - элемент который дополняет свойтсва тега
// Разметка состоит из тегов  и они имеют антрибуты. Тег - обладает определенными свойствами, а антрибут дополняет эти свойства.
// Набор тегов создает иеархическое дерево.
// При создани файла  Html есть обязательные теги:
// <!DOCTYPE html> - объявляем тип документа.
// <html lang="en"> - является контейнером,который заключает в себе все содержимое веб-страницы
// <head> - метаинформация  содержиться
//   <meta charset="UTF-8">
//   <meta http-equiv="X-UA-Compatible" content="IE=edge">
//   <meta name="viewport" content="width=device-width, initial-scale=1.0">
//   <title>Document</title>
// </head>
// <body> - то что видно в браузере

// </body>
// </html>

// ==================Что принес Html5 ============================

// 	Новые теги:
// <header> </header>
// <footer></footer>
// <section></section>
// <article></article>
// <aside></aside>
// <nav></nav>
// 	Новый дескриптор DOCTYPE;
// 	Новое объявление кодировки символов;

// Canvas - работа с графикой
// Передача сообщений между документами
// Geolocation API - работа с местоположением
// MathML
// Microdata позволяющая хранить дополнительные данные в структуре документа!!!!
// WebSocket
// Веб-хранилища localStorage и sessionStorage – контейнеры для локального хранения информации
// Web SQL Database реляционная база данных на веб-странице
// Web Workers технология предоставляющая веб-приложениям возможность выполнять фоновые задачи в отдельных потоках
// XMLHttpRequest Level 2

//================== Одинарные и парные теги ==============================

// Одинарныц тег <имя тега>
// Парный тег <имя тега></имя тега>

//================ Антрибут ========================

// Бывают обязательные антрибуты:
// <img src="" alt=""> - src="" alt="" обзательные антрибуты

//====================== Основыне типы тегов ========================

// Запрещено вставлять блочный элемент внутрь строчного
// Блочные - занимают всю ширину страницы или блока и начинаються с нововй строки. Занимает всю доступную ширину, высота элемента определяется его содержимым, и он всегда начинается с новой строки (< <h1>,...,<h6>, <p>, <table>, <ul></ul>)

// Строчные - занимают сколько им необходимо места и идут в одну строку  (<img>, <span>, <a>,)  которые являются непосредственной частью строки.

// ================================= Сематическая разметка =============================================

//Семантические теги, используя которые можно сделать структуру страницы более понятной и логичной, благодаря которой браузер может понять, где находится заголовок, где текст, а где навигация..Мы отделяем важную информацию благодаря этим тегам.. Делать структуру документа более понятной

// <header> </header>  - заголовок страницы
// <footer></footer>  - формирует нижнюю часть элемента или страницы, которая обычно состоит из технической и юридической информации, контактных данных
// <section></section> разделяет страницы или записи на тематические блоки
// <article></article> группирует записи, публикации или статьи
// <aside></aside>  - группирует содержимое, которое будет показано в блоке сбоку от основного содержания страницы
// <nav></nav> создает раздел с навигационными ссылками на странице или на сайте
// <mark></mark> Подсвечивает текст. Может быть использован для подсветки совпадений при реализации функции поиска по документу

//============================================================ CSS ===============================================

// Каскадные таблицы стилей.....нужен для внешнего оформления html документов. Каскад - это иеархия в которой выстроены таблицы стилей
// Дочерние элементы могут наследовать стили у родительского элемента

// ====================== Способо подключения  CSS ==============================

// По приоритету будет (смотри номера в списке)

//1 •	Встроенный - с помощью style атрибута внутри HTML-элементов .....пишем код для каждого элемента.
//2 •	Внутренний - с помощью <style> элемента в <head> разделе .....увеличение время загрузки, этот стиль только к одной странице, и мы не сможем его использовать дальше..
//3 •	Внешний - с помощью <link> элемента для ссылки на внешний файл CSS........Меньше размер страницы, быстрая загрузка, нет задвоение кода...но страница может неккоректно отображаться до послной загрузки сраницы.

//===================== Работа со  стилями ===============

//Когда мы задали стиль родителю, то этот стиль будет наследоваться и дочерними элементами.
//Способ изоляци этого   --- нужно выстраивать стили на одном уровне.
//Прописать всем элементам стиль - есть универсальный селектор (*).
//Можно использовать псевдоклассы для передаси стилей дочерним элементам.
//Когда задан стиль в родителе а мы такой же прописали в дочернем то приоритет будет для дочернего....это не всегда может стоять в родительскоим id или importon.
// Пример схлопывания margin (Отступы margin-top и margin-bottom иногда объединяются в один, с размером равным наибольшему из них)

//  <body>
// <div></div>
// <div></div>

// </body>
//        div {
//       margin: 20px 0 30px;
//     }

//Схлопывание происходти в следующих случаях: Соседние элементы; Пустые блоки; Родительский и первый/последний дочерние элементы

// Адаптив - это когда страница подстраиваеться под размер определенного устройства....
//Есть адаптив и отзывчивый дизайн: 1 это когда есть конкретные состояния под которое он может подстраиваться а 2 это подстраиваеться под любое

// В данном примере приоритет будет в каком порядке стоят классы в стайле, но не как в диве(в диве просто перечисление); когда мы добавим id то он будет приоритеней всех
//  <body>
//     <div id ="wer" class="foo bar"></div>
//     <body>
//         <style>
//         #wer{

//          }
//       .bar {
//         color: darkorange;
//       }
//       .foo {
//         color: darkred;
//       }
//     </style>
